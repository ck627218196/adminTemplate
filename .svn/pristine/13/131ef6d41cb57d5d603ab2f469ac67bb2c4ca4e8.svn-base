<template>
  <div class="navbar">
    <div class="navbar-cntent">
      <div class="left-menu">
        <div class="company-name-logo"><span></span></div>
      </div>
      <div class="right-menu">
        <div class="center-menu"></div>
        <el-dropdown
          trigger="click"
          @command="handleCommand"
        >
          <span class="el-dropdown-link">
            {{userName}}<i class="el-icon-arrow-down el-icon--right"></i>
          </span>
          <el-dropdown-menu slot="dropdown">
            <el-dropdown-item command="0">用户信息</el-dropdown-item>
            <el-dropdown-item command="1">修改密码</el-dropdown-item>
            <el-dropdown-item command="2">退出登录</el-dropdown-item>
          </el-dropdown-menu>
        </el-dropdown>
      </div>
    </div>
     <!-- 修改修改用户信息 -->
      <el-dialog title="修改用户信息" :visible.sync="dialogInfoVisible" class="eidt-user-info">
        <editUserInfo @sendDialogClose="sendDialogClose"/>
      </el-dialog>

      <!-- 修改密码 -->
      <el-dialog title="修改密码" :visible.sync="dialogPasswordVisible" class="edit-password">
        <editUserPassword @sendDialogPassword="sendDialogPassword"/>
      </el-dialog>
    </div>
</template>

<script>
import { mapGetters } from 'vuex'
import editUserInfo from '../../user/modifyInformation'
import editUserPassword from '../../user/modifyPassword'

export default {
  components: {
    editUserInfo,
    editUserPassword
  },
  data() {
    return {
      dialogInfoVisible: false,
      dialogPasswordVisible: false,
      oneLevel: 0,
      twoLevel: 0,
      threeLevel: 0,
      fourLevel: 0
    }
  },
  computed: {
    ...mapGetters([
      'userName',
    ])
  },
  mounted() { },
  methods: {
    toggleSideBar() {
      this.$store.dispatch('toggleSideBar')
    },
    handleCommand(command) {
      if (command === 2) {
        this.logout();
      } else if (command === 0) {
        this.dialogInfoVisible = true
      } else {
        this.dialogPasswordVisible = true
      }
    },
    logout() {
      this.$store.dispatch('LogOut').then(() => {
        window.location.reload()// In order to re-instantiate the vue-router object to avoid bugs
      })
    },
    sendDialogClose(payload) {
      this.dialogInfoVisible = payload
    },
    sendDialogPassword(payload) {
      this.dialogPasswordVisible = payload
    },
  }
}
</script>

<style rel="stylesheet/scss" lang="scss">
.edit-password{
  .el-dialog__body{
    padding-top: 0 !important;
  }
}
.navbar {
  overflow: hidden;
  position: fixed;
  z-index: 1002;
  width: 100%;
  height: 70px;
  background-image: url(./../../../images/logo.png);
  background-color: $headerBg;
  top: 0;
  // box-shadow:0px 0px 2px 0 rgba(221, 223, 228, 0.6), 0 3px 2px 0 rgba(215, 216, 218, 0.5);
  display: flex;
  justify-content: space-between;
  .center-menu{
    display: inline-block;
    width: 240px;
    margin-right: 50px;
  }
  .el-dropdown-link {
    cursor: pointer;
    color: #409EFF;
  }
  .el-icon-arrow-down {
    font-size: 12px;
  }
  .company-name-logo{
    line-height: 72px;
    margin-left: 20px;
    font-size:24px;
    color:#0c93ff;
    span{
      font-size: 16px !important;
      color: #fff !important;
    }
  }
  .hamburger-container {
    line-height: 46px;
    height: 100%;
    float: left;
    cursor: pointer;
    transition: background .3s;

    &:hover {
      background: rgba(0, 0, 0, .025)
    }
  }

  .breadcrumb-container {
    float: left;
  }

  .errLog-container {
    display: inline-block;
    vertical-align: top;
  }

  .right-menu {
    height: 100%;
    line-height: 72px;
    margin-right:20px;
    color:#fff;
    width: 40%;
    text-align: right;
    .el-dropdown{
      display: inline-block;
    }
    .el-dropdown,.el-dropdown-link{
      color:#fff !important;
    }
    &:focus {
      outline: none;
    }

    .right-menu-item {
      display: inline-block;
      padding: 0 8px;
      height: 100%;
      font-size: 18px;
      color: #5a5e66;
      vertical-align: text-bottom;

      &.hover-effect {
        cursor: pointer;
        transition: background .3s;

        &:hover {
          background: rgba(0, 0, 0, .025)
        }
      }
    }
  }
}
</style>
