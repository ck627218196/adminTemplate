<template>
  <div class='app-container' style='padding: 0px'>
    <el-form
      ref='informationForm'
      :rules='informationFormRules'
      :model='user'
      label-position='left'
      label-width='70px'
      class='form-inline'
    >
      <el-form-item label='账号'>
        <el-input :disabled='true' v-model='user.username' />
      </el-form-item>
      <el-form-item label='姓名'>
        <el-input :disabled='true' v-model='user.name' />
      </el-form-item>
      <el-form-item label='手机号码' prop='phone'>
        <el-input v-model='user.phone' />
      </el-form-item>
      <el-form-item label='邮箱' prop='email'>
        <el-input v-model='user.email' />
      </el-form-item>
      <el-form-item label='钉钉号' prop='dingding'>
        <el-input v-model='user.dingding' />
      </el-form-item>
      <el-form-item label='微信号' prop='wechat'>
        <el-input v-model='user.wechat' />
      </el-form-item>
    </el-form>

    <div slot='footer' class='dialog-footer'>
      <el-button type='primary' @click='updateInformation()'>保存</el-button>
      <el-button type='info' @click='closeDialog'>取消</el-button>
    </div>
  </div>
</template>

<script>
import { getUserProfile, updateUserProfile } from '@/api/system/user';

export default {
  name: 'ModifyInformation',

  data() {
    const checkEmail = (rule, value, callback) => {
      if (!value) {
        callback(new Error('请输入邮箱'));
      } else {
        const reg = /^[A-Za-z0-9\u4e00-\u9fa5]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/;
        if (!reg.test(value)) {
          callback(new Error('请输入有效的邮箱'));
        }
        callback();
      }
    };

    const checkPhone = (rule, value, callback) => {
      if (!value) {
        callback(new Error('请输入手机号码'));
      } else {
        const reg = /^1[34578]\d{9}$/;
        if (!reg.test(value)) {
          callback(new Error('请输入有效的手机号'));
        }
        callback();
      }
    };

    return {
      informationFormRules: {
        phone: [{ validator: checkPhone, trigger: 'blur' }],
        email: [{ validator: checkEmail, trigger: 'blur' }]
      },
      user: {
        username: null,
        name: null,
        phone: null,
        email: null,
        dingding: null,
        wechat: null
      },
      temp: {
        oldPassword: null,
        newPassword: null,
        passwordRepeat: null,
        verification: null,
        checkCode: null
      },
      modify: {
        approvalStatus: null,
        roles: null
      },
      dialogChangePassword: false,
      dialogInfoVisible: false,
      dialogModify: false
    };
  },

  created() {
    this.getInformation();
  },

  methods: {
    getInformation() {
      getUserProfile().then((response) => {
        this.user.username = response.data.data.userName;
        this.user.name = response.data.data.name;
        this.user.phone = response.data.data.phone;
        this.user.email = response.data.data.email;
        this.user.dingding = response.data.data.dingding;
        this.user.wechat = response.data.data.wechat;
      });
    },
    updateInformation() {
      this.$refs.informationForm.validate((valid) => {
        if (valid) {
          updateUserProfile(this.user).then((response) => {
            if (response.data.errno === 0) {
              this.$message({
                message: '修改信息成功',
                type: 'success'
              });
              this.closeDialog();
              this.getInformation();
            } else {
              this.$message({
                message: '修改信息失败',
                type: 'false'
              });
            }
          });
        }
      });
    },
    closeDialog() {
      this.dialogInfoVisible = false;
      this.$emit('sendDialogClose', this.dialogInfoVisible);
    }
  }
};
</script>

<style rel='stylesheet/scss' lang='scss' >
.verificationinput {
  width: 100px;
  height: 45px;
  margin-top: -117px;
  color: #2d2f33;
}
.dialog-footer {
  text-align: right;
}
.form-inline {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
</style>
